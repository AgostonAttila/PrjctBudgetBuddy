@page "/register";
@layout FullScreenLayout

@inject IAccountService AccountService
@inject NavigationManager NavigationManager

@using blazorapp.Models.DTO;
@using blazorapp.Services.Account;

<h3 class="card-header">Register</h3>
<div class="card-body">
	<EditForm Model="@model" OnValidSubmit="HandleSubmit">
		<DataAnnotationsValidator />
		<div class="row">
			<div class="mb-3 col-5">
				<label for="FirstName" class="form-label">First Name</label>
				<InputText @bind-Value="model.FirstName" class="form-control" />
				<ValidationMessage For="@(() => model.FirstName)" class="text-danger d-block" />
			</div>
			<div class="mb-3 col-5">
				<label for="LastName" class="form-label">Last Name</label>
				<InputText @bind-Value="model.LastName" class="form-control" />
				<ValidationMessage For="@(() => model.LastName)" class="text-danger d-block" />
			</div>
		</div>
		<div class="mb-3">
			<label for="Email" class="form-label">Email</label>
			<InputText @bind-Value="model.Email" type="email" class="form-control" />
			<ValidationMessage For="@(() => model.Email)" class="text-danger d-block" />
		</div>
		<div class="row">
			<div class="mb-3 col">
				<label for="Password" class="form-label">Password</label>
				<InputText @bind-Value="model.Password" type="password" class="form-control" />
				<ValidationMessage For="@(() => model.Password)" class="text-danger d-block" />
			</div>
			<div class="mb-3 col">
				<label for="ConfirmPassword" class="form-label">Confirm Password</label>
				<InputText @bind-Value="model.ConfirmPassword" type="password" class="form-control" />
				<ValidationMessage For="@(() => model.ConfirmPassword)" class="text-danger d-block" />
			</div>
		</div>
		<div class="mb-3 form-check">
			<InputCheckbox @bind-Value="model.AcceptTerms" id="acceptTerms" class="form-check-input" />
			<label for="AcceptTerms" class="form-check-label">Accept Terms & Conditions</label>
			<ValidationMessage For="() => model.AcceptTerms" class="text-danger d-block" />
		</div>
		<div class="mb-3">
			<button class="btn btn-primary">
				@if (loading)
				{
					<span class="spinner-border spinner-border-sm mr-1"></span>
				}
				Register
			</button>
			<NavLink class="nav-link btn btn-link pe-0" href="login">Cancel</NavLink>
		</div>
	</EditForm>
</div>

@code {

	RegisterDTO model = new RegisterDTO();
	private bool loading;
	private string error;

	protected override void OnInitialized()
	{

	}

	async Task HandleSubmit()
	{
		loading = true;
		try
		{
			var result = await AccountService.Register(model);
			if (result.IsSuccess)
			{
				var returnUrl = NavigationManager.QueryString("returnUrl") ?? "/login";
				loading = false;
				NavigationManager.NavigateTo(returnUrl);
			}
			else
			{
				loading = false;
			}
		}
		catch (Exception ex)
		{
			error = ex.Message;
			loading = false;
			StateHasChanged();
		}
	}

}
